@model BWR.Application.Dtos.BoxAction.BoxActionInitialDto

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_BlankPageLayout.cshtml";
}
<div class="container">
    <div class="row">
        <div class="col-lg-4">
            <label>نوع الحركة</label>
            <select class="form-control" id="typeOfAction">
                <option value="-1">
                    صرف
                </option>
                <option value="1">
                    قبض
                </option>
            </select>
        </div>
        <div class="col-lg-4">
            <label>العملة</label>
            @Html.DropDownList("Coins", new SelectList(Model.Coins, "Id", "Name"), " ", htmlAttributes: new { @class = "form-control", id = "coins" })
        </div>
        <div class="col-lg-4">
            <label>الحساب</label>
            <select class="form-control" id="firstAcountSelect">
                <option value="1">عامة</option>
                @*<option value="2">حوالة مباشرة</option>*@
                <option value="3">حساب العملاء</option>
                <option value="4">حساب الشركات</option>
            </select>
        </div>
    </div>
    <div class="row">
        <div id="agentDiv" name="acountDiv" hidden="hidden">
            <div class="col-lg-6">
                <label>اختر العميل</label>
                @Html.DropDownList("Agents", new SelectList(Model.Agents, "Id", "FullName"), "", htmlAttributes: new { @class = "form-control", id = "agents" })
            </div>
            <div class="col-lg-6">
                <div class="row">
                    <div class="col-lg-6">
                        <label>رصيد العميل</label>
                        <br />
                        <span class="label label-primary" id="agentcurrentBalnce"></span>
                    </div>
                    <div class="col-lg-6">
                        <label>الرصيد المتبقي</label>
                        <br />
                        <span class="label label-primary" id="agentnewBalnce"></span>
                    </div>
                </div>
            </div>
        </div>
        <div id="ExpencesDiv" name="acountDiv" class="col-lg-6">
            <label>الصرفيات</label>
            @Html.DropDownList("PublicExpenses", new SelectList(Model.PublicExpenses, "Id", "Name"), "", htmlAttributes: new { @class = "form-control", id = "publicExpenses" })
        </div>
        <div id="incominingDiv" name="acountDiv" class="col-lg-6" hidden="hidden">
            <label>الإرادات</label>
            @Html.DropDownList("PublicIncomes", new SelectList(Model.PublicIncomes, "Id", "Name"), "", htmlAttributes: new { @class = "form-control", id = "publicIncomes" })
        </div>
        <div id="companyDiv" name="acountDiv" hidden="hidden">
            <div class="col-lg-6">

                <label>الشركات</label>
                @Html.DropDownList("Companies", new SelectList(Model.Companies, "Id", "Name"), "", htmlAttributes: new { @class = "form-control", id = "companies" })
            </div>
            <div class="col-lg-6">
                <div class="row">
                    <div class="col-lg-6">
                        <label>رصيد الشركة</label>
                        <br />
                        <span class="label label-primary" id="companycurrentBalnce"></span>
                    </div>
                    <div class="col-lg-6">
                        <label>الرصيد المتبقي</label>
                        <br />
                        <span class="label label-primary" id="copanynewBalnce"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6">
            <label>المبلغ</label>
            <input type="text" class="form-control" onkeypress="validation(this, event); " onkeyup="FormaittingNumber(this);" onchange="" id="amout" />
        </div>
        <div class="col-lg-6">
            <label>الملاحظات</label>
            <input type="text" class="form-control" name="note" id="note" />
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4">
            <label>جهة الصرف</label>
            <select class="form-control" id="secoundAcount">
                <option value="1">الصندوق</option>
                <option value="2">حساب العملاء</option>
                <option value="3">حساب الشركات</option>
            </select>
        </div>
        <div class="col-lg-8" style="display:none" id="secounAcountDetials">

            <div id="secoundCompanyDiv" style="display:none">
                <div class="col-lg-8">
                    <label> اختر الشركة</label>
                    <select id="secoundCompanySelect"></select>
                </div>
            </div>
            <div id="secoundAgentDiv" style="display:none">
                <div class="col-lg-8">
                    <label> اختر العميل</label>
                    <select id="secoundAgentSelect"></select>
                </div>
            </div>

        </div>
    </div>
    <button class="btn btn-primary" style="margin-top:10px" id="submit">حفظ</button>
</div>

@section ScriptPath{
    <script src="~/Scripts/GlopalScript.js"></script>
    @*<script src="~/Scripts/BoxAction/Index.js"></script>*@
}

<script>
    var clientBalnae;
    var companyBalnce;

    $(function () {
        $('#secoundAcount').change(function () {
            hideAllSecoundDiv();
            debugger;
            var secoundAcount = $(this).val();
            if (secoundAcount == 1) {
                return;
            }
            if (secoundAcount == 2) {
                secounAcountDetials.style.display = 'block';
                secoundAgentDiv.style.display = 'block';
            }
            if (secoundAcount == 3) {
                secounAcountDetials.style.display = 'block';
                secoundCompanyDiv.style.display = 'block';
            }
            fillSecoundSelect();
        });
    });

    function hideAllSecoundDiv() {
        secounAcountDetials.style.display = 'none';
        secoundAgentDiv.style.display = 'none';
        secoundCompanyDiv.style.display = 'none';
    }

    function fillSecoundSelect() {
        
        $('#secoundAgentSelect').html('');
        $('#secoundCompanySelect').html('');
        $('#secoundAgentSelect').select2({ allowClear: !0, placeholder: "العملاء", width: null });
        $('#secoundCompanySelect').select2({ allowClear: !0, placeholder: "الشركات", width: null });
        var companyId;
        var agentId;
        if ($('#agents').val() == "") {
            agentId = null;
        } else {
            agentId = $('#agents').val();
        }
        if ($('#companies').val() == "") {
            companyId = null;
        } else {
            companyId = $('#companies').val();
        }
        $.post(
            '@Url.Action("GetCompanyWithoutSpecific", "Company")',
            {
                'companyId': companyId,
            },
            function (data) {
                for (var i = 0; i < data.length; i++) {
                    var newOption = new Option(data[i].Name, data[i].Id, false, false);
                    $('#secoundCompanySelect').append(newOption).trigger('change');
                }
                $('#secoundCompanySelect').val(null).trigger('change');
            }
        )
        $.post(
            '@Url.Action("GetAllWithoutSpecific", "Client")',
            {
                'clientId': agentId,
            },
            function (data) {
                for (var i = 0; i < data.length; i++) {
                    var newOption = new Option(data[i].FullName, data[i].Id, false, false);

                    $('#secoundAgentSelect').append(newOption).trigger('change');
                }
                $('#secoundAgentSelect').val(null).trigger('change');
            }
        )

    }

    function emptyForm() {
        $('#typeOfAction').val(-1).change();
        $('#firstAcountSelect').val(1).change();
        $('#amout').val("");
        $('#note').val("");
        $('#secoundAcount').val(1).change();
        $('#companies').val("").change();
        $('#agents').val("").change();
    }
    $('#typeOfAction').change(function () {

        //var firstAcountSelect = document.getElementById('firstAcountSelect');
        //firstAcountSelect.getElementsByTagName('option')[1].hidden = !firstAcountSelect.getElementsByTagName('option')[1].hidden;
        showFromAcount($(this).val(), $("#firstAcountSelect").val());
    });
    $('#firstAcountSelect').change(function () {

        showFromAcount($('#typeOfAction').val(), $(this).val());

    });
    function showFromAcount(typeOfAction, acountId) {

        $('div[name="acountDiv"]').each(function (index) {
            $(this).hide();
        });
        if (acountId == 3) {
            $('#agentDiv').show(0, function () {
                $('#agents').select2();
            });
            return;
        }
        if (acountId == 4) {
            $('#companyDiv').show(0, function () {
                $('#companies').select2();
            });
            return;
        }
        if (acountId == 1) {
            if ($('#typeOfAction').val() == -1) {
                $('#ExpencesDiv').show();
                return;
            } else {
                $('#incominingDiv').show();
                return;
            }
        }
    }


    function getClientBalanceByCoin(clientId, coinId) {
        $.post(
            '@Url.Action("GetClientCashByCoin", "ClientCash")',
            {
                clientId: clientId,
                coinId: coinId
            }, function (data) {
                console.log(data);
                clientBalnae = data;
                var balnce = numberWithCommas(parseFloat(data.Total));
                $('#agentnewBalnce').text(balnce);
                $('#agentcurrentBalnce').text(numberWithCommas(balnce));
            }
        );
    }
    function getCompanyBalnceByCoin(companyId, coinId) {
        $.post(
            '@Url.Action("GetCompanyMaxAndDeptByCoin", "CompanyCash")', {
                companyId: companyId,
                coinId: coinId
            }, function (data) {
                companyBalnce = data;
                var balnce = numberWithCommas(parseFloat(data.Total));
                $('#companycurrentBalnce').text(balnce);
                $('#copanynewBalnce').text(balnce);
            }
        )
    }
    $('#coins').change(function () {
        if ($('#agents').val() == "") {
            resetAgentBlance();
        } else {
            getClientBalanceByCoin($('#agents').val(), $(this).val());
        }
        if ($('#companies').val() == "") {
            resetCompanyBalnce();
        } else {
            getCompanyBalnceByCoin($('#companies').val(), $(this).val())
        }
        if ($('#agents').val() != '') {
            clacAgentCurrentBalcne();
        }
    });
    $('#companies').change(function () {
        if ($(this).val() == "") {
            resetCompanyBalnce();
            return;
        }
        getCompanyBalnceByCoin($(this).val(), $('#coins').val());
    })
    $('#agents').change(function () {
        if ($(this).val() == "") {
            resetAgentBlance();
            return;
        }
        getClientBalanceByCoin($(this).val(), $('#coins').val());
        setTimeout(function () { clacAgentCurrentBalcne(); }, 500); 
    });

    function resetAgentBlance() {
        $('#agentcurrentBalnce').empty();
        $('#agentnewBalnce').empty();
    }
    function resetCompanyBalnce() {
        $('#companycurrentBalnce').empty();
        $('#copanynewBalnce').empty();
    }
    $('#submit').click(function () {
        

        if (!validate()) {
            return;
        }
        var secoundAcount = $('#secoundAcount').val();
        var coinId = $('#coins').val();
        var note = $('#note').val();
        var amount = $('#amout').val();

        amount = deleteCommaFromNumber(amount);
        var actionType = parseInt($('#typeOfAction').val());
        var firstAcountType = $('#firstAcountSelect').val();

        if (secoundAcount == 1) {
            
            var firstAcountType = $('#firstAcountSelect').val();
            //general
            if (firstAcountType == 1) {
                if (actionType == -1) {
                    $.post(
                        '@Url.Action("PayExpenciveFromMainBox", "BoxAction")', {
                            ExpensiveId: parseInt($('#publicExpenses').val()),
                            CoinId: coinId,
                            Amount: amount,
                            Note: note
                        }, function (data) {
                            if (data.Success) {
                                toastr["success"]("تم");
                                emptyForm();
                            } else {
                                toastr["error"]("حدثت مشكلة اثناء الحفظ");
                            }

                        }
                    )
                }
                else {
                    $.post(
                        '@Url.Action("ReciverIncomeToMainBox", "BoxAction")', {
                            IncomeId: $('#publicIncomes').val(),
                            CoinId: coinId,
                            Amount: amount,
                            Note: note
                        }, function (data) {
                            if (data.Success) {
                                toastr["success"]("تم");
                                emptyForm();
                            } else {
                                toastr["error"]("حدثت مشكلة اثناء الحفظ");
                            }

                        }
                    );
                }
            }
            // client
            else if (firstAcountType == 3) {
                var client = $('#agents').val();
                if (client == "") {
                    toastr["error"]("يجب عليك ان تحدد العميل", "خطاْ");
                    return;
                }
                if (actionType == -1) {
                    $.post(
                        '@Url.Action("PayForClientFromMainBox", "BoxAction")', {
                            ClientId: $('#agents').val(),
                            CoinId: $('#coins').val(),
                            Amount: amount,
                            Note: note
                        }, function (data) {
                            if (data.Success) {
                                toastr["success"]("تم");
                                emptyForm();
                            } else {
                                toastr["error"]("حدثت مشكلة اثناء الحفظ");
                            }
                        });
                }
                else if (actionType == 1) {

                    $.post(
                        '@Url.Action("ReciveFromClientToMainBox", "BoxAction")', {
                            ClientId: $('#agents').val(),
                            CoinId: $('#coins').val(),
                            Amount: amount,
                            Note: note
                        }, function (data) {
                            if (data.Success) {
                                toastr["success"]("تم");
                                emptyForm();
                            } else {
                                toastr["error"]("حدثت مشكلة اثناء الحفظ");
                            }
                        });
                }
            }
            else if (firstAcountType == 4) {
                var company = $('#companies').val();
                if (company == "") {
                    toastr["error"]("يجب عليك ان تحدد الشركة", "خطاْ");
                    return;
                }
                if (actionType == -1) {
                    $.post(
                        '@Url.Action("PayForCompanyFromMainBox", "BoxAction")'
                        , {
                            CompanyId: $('#companies').val(),
                            CoinId: $('#coins').val(),
                            Amount: amount,
                            Note: note
                        }
                    ), function (data) {
                        if (data.Success) {
                            toastr["success"]("تم");
                            emptyForm();
                        } else {
                            toastr["error"]("حدثت مشكلة اثناء الحفظ");
                        }
                    }
                }
                else if (actionType == 1) {

                    $.post(
                        '@Url.Action("ReciveFromCompanyToMainBox", "BoxAction")', {
                            CompanyId: $('#companies').val(),
                            CoinId: $('#coins').val(),
                            Amount: amount,
                            Note: note
                        }, function (data) {
                            if (data.Success) {
                                toastr["success"]("تم");
                                emptyForm();
                            } else {
                                toastr["error"]("حدثت مشكلة اثناء الحفظ");
                            }
                        }
                    );
                }
            }

        } else if (secoundAcount == 2) {
            var clientSecounAcount = $('#secoundAgentSelect').val();

            if (firstAcountType == 3) {
                amount = parseFloat(amount);
                if (actionType == -1) {
                    amount = amount * -1;
                }
                $.post(
                    '@Url.Action("FromClientToClient", "BoxAction")', {
                        FirstClientId: $('#agents').val(),
                        SecoundClientId: clientSecounAcount,
                        CoinId: $('#coins').val(),
                        Amount: amount,
                        Note: note
                    },
                    function (data) {
                        if (data.Success) {
                            toastr["success"]("تم");
                            emptyForm();
                        } else {
                            toastr["error"]("حدث خطاء ما الرجاء إعادة تحميل الصفحة و المحاولة ", "خطاْ");
                            emptyForm();
                        }
                    }
                )
            }
            else if (firstAcountType == 4) {

                amount = parseFloat(amount);
                if (actionType == -1) {
                    amount = amount * -1;
                }
                $.post(
                    '@Url.Action("FromCompanyToClient", "BoxAction")', {
                        CompanyId: $('#companies').val(),
                        ClientId: $('#secoundAgentSelect').val(),
                        CoinId: $('#coins').val(),
                        Amount: amount,
                        Note: note
                    }, function (data) {
                        if (data.Success) {
                            toastr["success"]("تم");
                            emptyForm();
                        } else {
                            toastr["error"]("حدث خطاء ما الرجاء إعادة تحميل الصفحة و المحوالة من جديد");
                        }
                    }
                )
            }
        } else if (secoundAcount == 3) {

            if (firstAcountType == 3) {
                amount = parseFloat(amount);
                if (actionType == -1) {
                    amount = amount * -1;
                }
                $.post(
                    '@Url.Action("FromClientToCompany", "BoxAction")', {
                        ClientId: $('#agents').val(),
                        CompanyId: $('#secoundCompanySelect').val(),
                        CoinId: $('#coins').val(),
                        Amount: amount,
                        Note: note
                    },
                    function (data) {
                        console.log(data);
                        if (data.Success) {
                            toastr["success"]("تم");
                            emptyForm();
                        } else {
                            toastr["error"]("حدث خطاء ما الرجاء إعادة تحميل الصفحة و المحوالة من جديد");
                        }
                    }
                )
            }
            else if (firstAcountType == 4) {
                amount = parseFloat(amount);
                if (actionType == -1) {
                    amount = amount * -1;
                }
                $.post(
                    '@Url.Action("FromCompanyToCompany", "BoxAction")', {
                        FirstCompanyId: $('#companies').val(),
                        SecounCompanyId: $('#secoundCompanySelect').val(),
                        CoinId: $('#coins').val(),
                        Amount: amount,
                        Note: note
                    },
                    function (data) {
                        if (data.Success) {
                            toastr["success"]("تم");
                            emptyForm();
                        } else {
                            toastr["error"]("حدث خطاء ما الرجاء إعادة تحميل الصفحة و المحوالة من جديد");
                        }
                    }
                )
            }
        }
    });
    $('#amout').keyup(() => {

        clacAgentCurrentBalcne();
    });
    function clacAgentCurrentBalcne() {
        var amount = parseFloat(deleteCommaFromNumber($('#amout').val()));
        if (isNaN(amount)) {
            amount = 0;
        }
        
        var typeOfAtionVal = $('#typeOfAction').val();

        if (typeOfAtionVal == 1) {

            $('#agentnewBalnce').text(numberWithCommas(clientBalnae.Total + amount));
        } else {
            $('#agentnewBalnce').text(numberWithCommas(clientBalnae.Total - amount));
        }

    }
    function CalcCompanyCurrentBalnce() {
        var amount = parseFloat(deleteCommaFromNumber($('#amout').val()));
        if (isNaN(amount)) {
            amount = 0;
        }
        var typeOfAtionVal = $('#typeOfAction').val();
        if (typeOfAtionVal == 1) {
            $('#copanynewBalnce').text(numberWithCommas(parseFloat(companyBalance.Total) + amount));
        } else {
            $('#copanynewBalnce').text(numberWithCommas(parseFloat(companyBalance.Total) - amount));
        }
    }

    function validate() {
        var firstAcountType = $('#firstAcountSelect').val();
        var secoundAcountType = $('#secoundAcount').val();
        if (firstAcountType == 3) {
            if ($('#agents').val() == "") {
                toastr["error"]("يجب عليك ان تحدد العميل", "خطاْ");
                return false;
            }
        }
        if (firstAcountType == 4) {
            if ($('#companies').val() == "") {
                toastr["error"]("يجب عليك ان تحدد الشركة", "خطاء");
                return false;
            }
        }
        var amount = $('#amout').val();
        if (amount == "" || amount == 0) {
            toastr["error"]("يجب عليك ان تحدد المبلغ", "خطاْ");
            return false;
        }
        if (secoundAcountType == 2) {
            if ($('#secoundAgentSelect').val() == null) {
                toastr["error"]("يجب عليك ان تحدد عميل جهة الصرف", "خطاْ");
                return false;
            }
        }
        if (secoundAcountType == 3) {
            if ($('#secoundCompanySelect').val() == null) {
                toastr["error"]("يجب عليك ان تحدد شركة جهة الصرف", "خطاْ");
                return false;
            }
        }
        return true;
    }

</script>